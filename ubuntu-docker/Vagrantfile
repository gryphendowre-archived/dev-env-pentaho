# -*- mode: ruby -*-
# vi: set ft=ruby :

unless Vagrant.has_plugin?("vagrant-disksize")
	system("vagrant plugin install vagrant-disksize")
	puts "Dependencies installed, please try the command again."
	exit
end

unless Vagrant.has_plugin?("vagrant-reload")
	system("vagrant plugin install vagrant-reload")
	puts "Dependencies installed, please try the command again."
	exit
end

Vagrant.configure("2") do |config|
	# https://app.vagrantup.com/ubuntu/boxes/bionic64
	# http://cloud-images.ubuntu.com/bionic/
	config.vm.box = "ubuntu/bionic64"
	config.vm.network "private_network", ip: "192.168.100.100"
	config.disksize.size = '50GB'
	
	config.vm.provider :virtualbox do |vb|
		vb.gui = true
		vb.name = 'docker-compose-vm'
		vb.customize ["modifyvm", :id, "--cpus", "2"]
		vb.customize ["modifyvm", :id, "--memory", "8192"]
		vb.customize ["modifyvm", :id, "--vram", "256"]
		vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
		vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
		vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
		
		vb.customize 'post-boot', ["controlvm", :id, "setvideomodehint", "1440", "900", "32"]
	end
	
	config.vm.provision :shell, path: "./../scripts/update.sh"
	config.vm.provision :reload
	config.vm.provision :shell, path: "./../scripts/install-gui.sh", args: ["18.04", "unity"]
	config.vm.provision :reload
	config.vm.provision :shell, path: "./../scripts/install-vb-guest-tools.sh"
	config.vm.provision :shell, path: "./../scripts/install-docker.sh", args: ["18.04"]
	config.vm.provision :shell, path: "./../scripts/install-java.sh", args: ["8"]
	config.vm.provision :reload
	config.vm.provision :shell, path: "./deploy-docker-app.sh"
end
