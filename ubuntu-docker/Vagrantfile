# -*- mode: ruby -*-
# vi: set ft=ruby :

unless Vagrant.has_plugin?("vagrant-disksize")
	system("vagrant plugin install vagrant-disksize")
	puts "Dependencies installed, please try the command again."
	exit
end

unless Vagrant.has_plugin?("vagrant-reload")
	system("vagrant plugin install vagrant-reload")
	puts "Dependencies installed, please try the command again."
	exit
end

Vagrant.configure("2") do |config|
	# https://app.vagrantup.com/ubuntu/boxes/bionic64
	# http://cloud-images.ubuntu.com/bionic/
	config.vm.box = "ubuntu/bionic64"
	
	config.vm.network "private_network", ip: "192.168.100.100"
	
	config.vm.network "forwarded_port", guest: 8080, host: 8080
	config.vm.network "forwarded_port", guest: 8443, host: 8443
	config.vm.network "forwarded_port", guest: 5432, host: 5432
	
	config.disksize.size = '50GB'
	
	config.vm.provider :virtualbox do |vb, override|
		vb.gui = true
		vb.name = 'docker-compose-vm'
		vb.customize ["modifyvm", :id, "--cpus", "2"]
		vb.customize ["modifyvm", :id, "--memory", "8192"]
		vb.customize ["modifyvm", :id, "--vram", "256"]
		vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
		vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
		vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
		
		override.vm.provision "update",
			type: "shell",
			preserve_order: true,
			path: "./../scripts/update.sh",
			args: []
		
		override.vm.provision "install-ui",
			type: "shell",
			preserve_order: true,
			path: "./../scripts/install-gui.sh",
			args: ["18.04", "unity"]
		
		config.vm.provision :reload
		
		override.vm.provision "install-vb-guest-tools",
			type: "shell",
			preserve_order: true,
			path: "./../scripts/install-vb-guest-tools.sh",
			args: []
		
		override.vm.provision "install-java",
			type: "shell",
			preserve_order: true,
			path: "./../scripts/install-java.sh",
			args: ["8"]
		
		override.vm.provision "install-docker",
			type: "shell",
			preserve_order: true,
			path: "./../scripts/install-docker.sh",
			args: ["18.04"]
		
		override.vm.provision "deploy-docker-app",
			type: "shell",
			preserve_order: true,
			path: "./deploy-docker-app.sh",
			args: ["ubuntu_bionic"]
	end
end
